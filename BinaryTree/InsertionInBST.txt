/******************************************************************************
perform insertion in binary search tree?
bst= left child is less than parent while right child is greater than parent.
*******************************************************************************/

public class Main
{
    static Node root;
    static Node temp=root;
    
    static class Node{
        int key;
        Node left;
        Node right;
        public  Node(int key){
           this.key=key;
            left=null;
            right=null;
        } 
    }
    
	public static void main(String[] args) {
		root=new Node(13);
		root.left=new Node(3);
		root.right=new Node(14);
		root.left.left=new Node(1);
		root.left.right=new Node(4);
		root.left.left.right=new Node(2);
		root.right.right= new Node(18);
		inorder(root);
		System.out.println();
	   root=insertRec(root,0);
	   inorder(root);
	}
	public static void inorder(Node root){
	    if(root==null)
	    return;
	    else{
	       System.out.print(root.key+" ");
	       inorder(root.left);
	       inorder(root.right);
	    }
	}
static Node insertRec(Node root, int key) { 
  
        /* If the tree is empty, return a new node */
        if (root == null) { 
            root=new Node(key);
            return root; 
        } 
  
        /* Otherwise, recur down the tree */
        if (key < root.key) 
            root.left = insertRec(root.left, key); 
        else if (key > root.key) 
            root.right = insertRec(root.right, key); 
  
        /* return the (unchanged) node pointer */
        return root; 
    } 
}