/*****************************************************************************
 * Write code to find out if its strict  Binary tree or not?
 Strict Binary tree= have two children or 0 children.
*******************************************************************************/
public class Main
{ 
   static Node root;
    static Node temp=root;
    static boolean result;
    
    public static class Node{
        int key;
        Node left;
        Node right;
        
        public Node(int key){
           this.key=key;
            left=null;
            right=null;
        }
    }
    public static boolean findBT(Node root){
        if(root==null)
        return true;   //empty binary tree.
        if(root.left==null&&root.right==null)
        return true;   //if no children.
        else{
            if(root.left!=null&&root.right!=null){
             return(findBT(root.left)&&findBT(root.right));
            }
        }
        return false;
    }
    
    public static void inorder(Node temp){
         if(temp==null)
         return ;
         System.out.print(temp.key+" ");
          inorder(temp.left);
         inorder(temp.right);
    }
    
	public static void main(String[] args) {
		root=new Node(27);
		root.left=new Node(15);
		root.right=new Node(35);
		root.left.left=new Node(12);
		root.left.right=new Node(17);
		root.right.left=new Node(32);
		System.out.print("inorder traversal: ");
		 inorder(root);
		 System.out.println();
		 result=findBT(root);
		 if(result==false)
		 System.out.println("not strict Binary tree");
		 if(result==true)
		 System.out.println("yes its strict binary tree");
		
	}
}